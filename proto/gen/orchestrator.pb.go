// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: orchestrator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{0}
}

type ExpressionID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    string                 `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpressionID) Reset() {
	*x = ExpressionID{}
	mi := &file_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpressionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionID) ProtoMessage() {}

func (x *ExpressionID) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionID.ProtoReflect.Descriptor instead.
func (*ExpressionID) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *ExpressionID) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type ResponseID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseID) Reset() {
	*x = ResponseID{}
	mi := &file_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseID) ProtoMessage() {}

func (x *ResponseID) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseID.ProtoReflect.Descriptor instead.
func (*ResponseID) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Expression struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Result        string                 `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Expression) Reset() {
	*x = Expression{}
	mi := &file_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *Expression) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Expression) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Expression) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ExpressionsList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expressions   []*Expression          `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpressionsList) Reset() {
	*x = ExpressionsList{}
	mi := &file_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpressionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionsList) ProtoMessage() {}

func (x *ExpressionsList) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionsList.ProtoReflect.Descriptor instead.
func (*ExpressionsList) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *ExpressionsList) GetExpressions() []*Expression {
	if x != nil {
		return x.Expressions
	}
	return nil
}

var File_orchestrator_proto protoreflect.FileDescriptor

const file_orchestrator_proto_rawDesc = "" +
	"\n" +
	"\x12orchestrator.proto\x12\forchestrator\"\a\n" +
	"\x05Empty\".\n" +
	"\fExpressionID\x12\x1e\n" +
	"\n" +
	"expression\x18\x01 \x01(\tR\n" +
	"expression\"\x1c\n" +
	"\n" +
	"ResponseID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"L\n" +
	"\n" +
	"Expression\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x16\n" +
	"\x06result\x18\x03 \x01(\tR\x06result\"M\n" +
	"\x0fExpressionsList\x12:\n" +
	"\vexpressions\x18\x01 \x03(\v2\x18.orchestrator.ExpressionR\vexpressions2\xec\x01\n" +
	"\fOrchestrator\x12H\n" +
	"\x10AddNewExpression\x12\x1a.orchestrator.ExpressionID\x1a\x18.orchestrator.ResponseID\x12I\n" +
	"\x11GetExpressionByID\x12\x1a.orchestrator.ExpressionID\x1a\x18.orchestrator.Expression\x12G\n" +
	"\x11GetAllExpressions\x12\x13.orchestrator.Empty\x1a\x1d.orchestrator.ExpressionsListB(Z&github.com/OnYyon/gRPCCalculator/protob\x06proto3"

var (
	file_orchestrator_proto_rawDescOnce sync.Once
	file_orchestrator_proto_rawDescData []byte
)

func file_orchestrator_proto_rawDescGZIP() []byte {
	file_orchestrator_proto_rawDescOnce.Do(func() {
		file_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orchestrator_proto_rawDesc), len(file_orchestrator_proto_rawDesc)))
	})
	return file_orchestrator_proto_rawDescData
}

var file_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_orchestrator_proto_goTypes = []any{
	(*Empty)(nil),           // 0: orchestrator.Empty
	(*ExpressionID)(nil),    // 1: orchestrator.ExpressionID
	(*ResponseID)(nil),      // 2: orchestrator.ResponseID
	(*Expression)(nil),      // 3: orchestrator.Expression
	(*ExpressionsList)(nil), // 4: orchestrator.ExpressionsList
}
var file_orchestrator_proto_depIdxs = []int32{
	3, // 0: orchestrator.ExpressionsList.expressions:type_name -> orchestrator.Expression
	1, // 1: orchestrator.Orchestrator.AddNewExpression:input_type -> orchestrator.ExpressionID
	1, // 2: orchestrator.Orchestrator.GetExpressionByID:input_type -> orchestrator.ExpressionID
	0, // 3: orchestrator.Orchestrator.GetAllExpressions:input_type -> orchestrator.Empty
	2, // 4: orchestrator.Orchestrator.AddNewExpression:output_type -> orchestrator.ResponseID
	3, // 5: orchestrator.Orchestrator.GetExpressionByID:output_type -> orchestrator.Expression
	4, // 6: orchestrator.Orchestrator.GetAllExpressions:output_type -> orchestrator.ExpressionsList
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_orchestrator_proto_init() }
func file_orchestrator_proto_init() {
	if File_orchestrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orchestrator_proto_rawDesc), len(file_orchestrator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orchestrator_proto_goTypes,
		DependencyIndexes: file_orchestrator_proto_depIdxs,
		MessageInfos:      file_orchestrator_proto_msgTypes,
	}.Build()
	File_orchestrator_proto = out.File
	file_orchestrator_proto_goTypes = nil
	file_orchestrator_proto_depIdxs = nil
}
